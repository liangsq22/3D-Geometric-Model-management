/*************************************************************************
【文件名】                 Point3D.cpp
【功能模块和目的】         三维点类实现
【开发者及日期】           梁思奇 2024/7/29
【更改记录】               
*************************************************************************/

//自身类头文件
#include "Point3D.hpp"
//std::logic_error所属头文件
#include <stdexcept>
//std::string所属头文件
#include <string>

/*************************************************************************
【函数名称】        Point3D
【函数功能】        默认构造函数(初始化为原点)
【参数】            无
【返回值】          无
【开发者及日期】    梁思奇 2024/7/29
【更改记录】
*************************************************************************/
Point3D::Point3D() : Point3D(0.0, 0.0, 0.0){
}

/*************************************************************************
【函数名称】        Point3D
【函数功能】        拷贝构造函数
【参数】            const Point3D& Source
【返回值】          无
【开发者及日期】    梁思奇 2024/7/29
【更改记录】
*************************************************************************/
Point3D::Point3D(const Point3D& Source) : Vector3D<double>(Source){
}

/*************************************************************************
【函数名称】        Point3D
【函数功能】        带参数基类构造函数
【参数】            const Vector3D<double>& Source
【返回值】          无
【开发者及日期】    梁思奇 2024/7/29
【更改记录】
*************************************************************************/
Point3D::Point3D(const Vector3D<double>& Source) 
    : Vector3D<double>(Source){
}

/*************************************************************************
【函数名称】        Point3D
【函数功能】        带三坐标点参数构造函数
【参数】            double x, double y, double z
【返回值】          无
【开发者及日期】    梁思奇 2024/7/29
【更改记录】
*************************************************************************/
Point3D::Point3D(double XValue, double YValue, double ZValue)
    : Vector3D<double>(std::array<double, 3>{XValue, YValue, ZValue}){
}

/*************************************************************************
【函数名称】        operator=
【函数功能】        三维点赋值运算符
【参数】            const Point3D Source
【返回值】          三维点自身引用值
【开发者及日期】    梁思奇 2024/7/29
【更改记录】       梁思奇 2024/8/5 重写
*************************************************************************/
Point3D& Point3D::operator=(const Point3D Source){
    if (this != &Source) {
        //调用基类赋值运算符
        Vector3D<double>::operator=(Source);
    }
    return *this;
}

//三维点坐标Setter

/*************************************************************************
【函数名称】        SetX
【函数功能】        三维点X坐标Setter
【参数】            double Value
【返回值】          无
【开发者及日期】    梁思奇 2024/7/29
【更改记录】
*************************************************************************/
void Point3D::SetX(double Value){
    m_rX = Value;
}

/*************************************************************************
【函数名称】        SetY
【函数功能】        三维点Y坐标Setter
【参数】            double Value
【返回值】          无
【开发者及日期】    梁思奇 2024/7/29
【更改记录】
*************************************************************************/
void Point3D::SetY(double Value){
    m_rY = Value;
}

/*************************************************************************
【函数名称】        SetZ
【函数功能】        三维点Z坐标Setter
【参数】            double Value
【返回值】          无
【开发者及日期】    梁思奇 2024/7/29
【更改记录】
*************************************************************************/
void Point3D::SetZ(double Value){
    m_rZ = Value;
}

/*************************************************************************
【函数名称】        SetXYZ
【函数功能】        三维点XYZ坐标Setter
【参数】            double XValue, double YValue, double ZValue
【返回值】          无
【开发者及日期】    梁思奇 2024/7/29
【更改记录】
*************************************************************************/
void Point3D::SetXYZ(double XValue, double YValue, double ZValue){
    m_rX = XValue;
    m_rY = YValue;
    m_rZ = ZValue;
}

/*************************************************************************
【函数名称】        operator>>
【函数功能】        流提取运算符，从输入流中提取Point3D对象的坐标值
【参数】            std::istream& Stream, Point3D& Point1
【返回值】          std::istream&，提取后的流
【开发者及日期】    梁思奇 2024/7/29
【更改记录】         
*************************************************************************/
std::istream& operator>>(std::istream& Stream, Point3D& Point1){
    //临时坐标值
    double X, Y, Z;
    //从输入流中提取三维点坐标值
    Stream >> X >> Y >> Z;
    //设置三维点坐标
    Point1.SetXYZ(X, Y, Z); 
    return Stream;
}

//三维点坐标Getter

/*************************************************************************
【函数名称】        GetX
【函数功能】        三维点X坐标Getter
【参数】            无
【返回值】          double X坐标值
【开发者及日期】    梁思奇 2024/7/29
【更改记录】
*************************************************************************/
double Point3D::GetX() const{
    return m_rX;
}

/*************************************************************************
【函数名称】        GetY
【函数功能】        三维点Y坐标Getter
【参数】            无
【返回值】          double Y坐标值
【开发者及日期】    梁思奇 2024/7/29
【更改记录】
*************************************************************************/
double Point3D::GetY() const{
    return m_rY;
}

/*************************************************************************
【函数名称】        GetZ
【函数功能】        三维点Z坐标Getter
【参数】            无
【返回值】          double Z坐标值
【开发者及日期】    梁思奇 2024/7/29
【更改记录】
*************************************************************************/
double Point3D::GetZ() const{
    return m_rZ;
}

/*************************************************************************
【函数名称】        GetXYZ
【函数功能】        三维点XYZ坐标Getter
【参数】            无
【返回值】          std::array<double, 3> XYZ坐标值
【开发者及日期】    梁思奇 2024/7/29
【更改记录】
*************************************************************************/
std::array<double, 3> Point3D::GetXYZ() const{
    return std::array<double, 3>{m_rX, m_rY, m_rZ};
}

/*************************************************************************
【函数名称】        operator<<
【函数功能】        流插入运算符，将Point3D对象的坐标输出到输出流
【参数】            std::ostream& Stream, const Point3D& Point1
【返回值】          std::ostream&，插入后的流
【开发者及日期】    梁思奇 2024/8/11
【更改记录】         
*************************************************************************/
std::ostream& operator<<(std::ostream& Stream, const Point3D& Point1){
    Stream << "(" << Point1.GetX() << ", " 
        << Point1.GetY() << ", " << Point1.GetZ() << ")";
    return Stream;
}

//虚函数默认实现，用于派生类重写

/*************************************************************************
【函数名称】        SetColor
【函数功能】        设置三维点颜色，派生类可重写
                    基类中调用此函数将抛出异常
【参数】            const std::string& Color
【返回值】          无
【开发者及日期】    梁思奇 2024/7/29
【更改记录】         
*************************************************************************/
void Point3D::SetColor(const std::string& Color1){
    //抛出异常，表示此操作在基类中无效，只能对派生的现实点类进行操作
    throw std::logic_error(
        "SetColor is not applicable to Point3D base");
}

/*************************************************************************
【函数名称】        SetRadius
【函数功能】        设置三维点半径，派生类可重写
                    基类中调用此函数将抛出异常
【参数】            double Radius1
【返回值】          无
【开发者及日期】    梁思奇 2024/7/29
【更改记录】         
*************************************************************************/
void Point3D::SetRadius(double Radius1){
    //抛出异常，表示此操作在基类中无效，只能对派生的现实点类进行操作
    throw std::logic_error(
        "SetRadius is not applicable to Point3D base");
}

/*************************************************************************
【函数名称】        SetMaterial
【函数功能】        设置三维点材质，派生类可重写
                    基类中调用此函数将抛出异常
【参数】            const std::string& Material1
【返回值】          无
【开发者及日期】    梁思奇 2024/7/29
【更改记录】         
*************************************************************************/
void Point3D::SetMaterial(const std::string& Material1){
    //抛出异常，表示此操作在基类中无效，只能对派生的现实点类进行操作
    throw std::logic_error(
        "SetMaterial is not applicable to Point3D base");
}

/*************************************************************************
【函数名称】        GetColor
【函数功能】        获取三维点颜色，默认返回"White"
【参数】            无
【返回值】          std::string，默认颜色白色
【开发者及日期】    梁思奇 2024/7/29
【更改记录】         
*************************************************************************/
std::string Point3D::GetColor() const{
    //非现实点类，默认颜色白色
    return "White";
}

/*************************************************************************
【函数名称】        GetRadius
【函数功能】        获取三维点半径，默认返回0.0
【参数】            无
【返回值】          double，默认半径0.0
【开发者及日期】    梁思奇 2024/7/29
【更改记录】         
*************************************************************************/
double Point3D::GetRadius() const{
    //非现实点类，默认半径0.0
    return 0.0;  
}

/*************************************************************************
【函数名称】        GetMaterial
【函数功能】        获取三维点材质，默认返回"None"
【参数】            无
【返回值】          std::string，默认材质"None"
【开发者及日期】    梁思奇 2024/7/29
【更改记录】         
*************************************************************************/
std::string Point3D::GetMaterial() const{
    //非现实点类，默认材质为None
    return "None";  
}
